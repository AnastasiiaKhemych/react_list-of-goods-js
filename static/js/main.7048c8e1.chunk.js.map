{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPH_BUTTON_ID","LENGTH_BUTTON_ID","App","useState","isReverse","setIsReverse","sortField","setSortField","visibleGoods","goods","reverse","preparedGoods","sort","good1","good2","localeCompare","length","getPrepareGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,iBACjBC,EAAmB,SAyBlB,IAAMC,EAAM,WACjB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAAyBC,EAAOH,EAAWI,GACzC,IAAMC,EAAa,YAAOF,GAmB1B,OAjBIH,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKN,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXN,GACFC,EAAcD,UAGTC,EAMcM,CAAgBlB,EAAiBO,EAAWF,GAOjE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPZ,EAAaP,IAEfoB,KAAK,SACLF,UAAWG,IAAG,iBACZf,IAAcN,GAAkB,YANpC,iCAWA,wBACEmB,QAAS,WACPZ,EAAaN,IAEfmB,KAAK,SACLF,UAAWG,IAAG,oBACZf,IAAcL,GAAoB,YANtC,4BAWA,wBACEkB,QAAS,WACPd,GAAcD,IAEhBgB,KAAK,SACLF,UAAWG,IAAG,qBACXjB,GAAa,YANlB,sBAUEE,GAAaF,IACb,wBACEe,QA1CM,WACdZ,EAAa,IACbF,GAAa,IAyCLe,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7048c8e1.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPH_BUTTON_ID = 'alphabetically';\nconst LENGTH_BUTTON_ID = 'length';\n\nfunction getPrepareGoods(goods, sortField, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case ALPH_BUTTON_ID:\n          return good1.localeCompare(good2);\n        case LENGTH_BUTTON_ID:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPrepareGoods(goodsFromServer, sortField, isReverse);\n\n  const onReset = () => {\n    setSortField('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(ALPH_BUTTON_ID);\n          }}\n          type=\"button\"\n          className={cn('button is-info',\n            sortField !== ALPH_BUTTON_ID && 'is-light')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(LENGTH_BUTTON_ID);\n          }}\n          type=\"button\"\n          className={cn('button is-success',\n            sortField !== LENGTH_BUTTON_ID && 'is-light')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReverse(!isReverse);\n          }}\n          type=\"button\"\n          className={cn('button is-warning',\n            !isReverse && 'is-light')}\n        >\n          Reverse\n        </button>\n        {(sortField || isReverse) && (\n          <button\n            onClick={onReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}